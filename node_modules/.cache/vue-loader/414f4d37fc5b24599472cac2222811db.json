{"remainingRequest":"/home/code/Documents/vue-study/vue-tracnhiem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/code/Documents/vue-study/vue-tracnhiem/src/components/question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/code/Documents/vue-study/vue-tracnhiem/src/components/question.vue","mtime":1627801226842},{"path":"/home/code/Documents/vue-study/vue-tracnhiem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/code/Documents/vue-study/vue-tracnhiem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/code/Documents/vue-study/vue-tracnhiem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/code/Documents/vue-study/vue-tracnhiem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCByZXN1bHQgZnJvbSAnLi9yZXN1dGwudnVlJwovLyBpbXBvcnQge21hcE11dGF0aW9uc30gZnJvbSAndnVleCcgCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdxdWVzdGlvbicsCiAgICAvLyBjb21wb25lbnRzOiB7cmVzdWx0fSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgcXVlc3Rpb25zKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucXVlc3Rpb25zCiAgICAgICAgfSwKICAgICAgICBjb3VudCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmNvdW50CiAgICAgICAgfSwKICAgICAgICAKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICBub3RJc0NvcnJlY3Q6IGZ1bmN0aW9uKCl7CiAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICB9CiAgICAKICAgIAogIH0KICAgIC8vICAgIG1ldGhvZHM6IG1hcE11dGF0aW9ucyhbJ0NPUlJFQ1QnXSkKICAgICAgICAgICAgCiAgICAgICAKICAgIAoKfQo="},{"version":3,"sources":["question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;AAKA","file":"question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question\">\n\n          <h1>Câu: {{count+1}} {{questions[count].question}} (1 điểm)</h1>\n\n\n              <li \n                class=\"answer\"  \n                v-for=\"(nameAnswer,index) in questions[count].answer\" \n                :key=\"index\"\n                @click=\"[questions[count].choose = index]\" \n                :class=\"{\n                isActive: questions[count].choose == index ,\n                NotisActive: questions[count].choose !== index ,\n                isCorrect: questions[count].choose == index && questions[count].correct == index ,\n                notIsCorrect: questions[count].choose == index && questions[count].correct !== index \n                 }\"  \n                 >\n\n             <a href=\"#\">{{nameAnswer}} </a> \n                \n             </li>\n\n        <button @click=\"notIsCorrect\">click </button>\n     \n        \n    </div>\n</template>\n\n<script>\n// import result from './resutl.vue'\n// import {mapMutations} from 'vuex' \nexport default {\n    name: 'question',\n    // components: {result},\n    computed: {\n        questions() {\n            return this.$store.state.questions\n        },\n        count() {\n            return this.$store.state.count\n        },\n        \n    },\n    methods: {\n    notIsCorrect: function(){\n        location.reload();\n    }\n    \n    \n  }\n    //    methods: mapMutations(['CORRECT'])\n            \n       \n    \n\n}\n</script>\n\n<style scoped>\n\n.question {\n    height: 500px;\n    width: 900px;\n    margin: 0px auto;\n}\n.question h1 {\n\n    border-radius: 10px;\n    background: darkblue;\n    color: white;\n    line-height: 80px;\n    \n}\n\n\n.question .answer {\n\n    text-align: center;\n    font-size: 25px;\n    height: 60px;\n    width: 400px;\n    margin: 20px auto;\n    border-radius: 30px;\n}\n\n.question li a {\n    text-decoration: none;\n    color: white;\n    font-size: 20px;\n    line-height: 50px;\n}\n.question li:hover {\n    background: rgb(138, 175, 138);\n    cursor: pointer;\n}\n.NotisActive {\n       background-color: rgb(63, 19, 146);\n}\n.isActive {\n    background: green;\n    color: rgb(86, 61, 155);\n}\n.isCorrect {\n    background: rgb(190, 190, 30);\n\n}\n.isCorrect a {\n    color: blue;\n}\n.notIsCorrect {\n    background: rgb(126, 13, 13);\n}\n</style>"]}]}